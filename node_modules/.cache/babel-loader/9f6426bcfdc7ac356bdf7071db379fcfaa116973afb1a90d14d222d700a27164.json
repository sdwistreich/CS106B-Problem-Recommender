{"ast":null,"code":"var _jsxFileName = \"/Users/suzannahwistreich/Desktop/Problem Reccomender/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport problems from './problems.json';\nimport Categories from './Categories';\nimport Modal from 'react-modal';\nimport './Banner.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nModal.setAppElement('#root');\nfunction App() {\n  _s();\n  // init 7 CS106B topics, default rank, dirichletCount to update, and priorCount calculated from poll (which does not update during app)\n  const [topics, setTopics] = useState([{\n    id: 'Programming in C++ and Big-O',\n    name: 'Programming in C++ and Big-O',\n    rank: 1,\n    dirichletCount: 1,\n    priorCount: 1\n  }, {\n    id: 'ADTs',\n    name: 'ADTs',\n    rank: 2,\n    dirichletCount: 1,\n    priorCount: 1\n  }, {\n    id: 'Recursion',\n    name: 'Recursion',\n    rank: 3,\n    dirichletCount: 4,\n    priorCount: 4\n  }, {\n    id: 'Backtracking',\n    name: 'Backtracking',\n    rank: 4,\n    dirichletCount: 6,\n    priorCount: 6\n  }, {\n    id: 'Classes',\n    name: 'Classes',\n    rank: 5,\n    dirichletCount: 1,\n    priorCount: 1\n  }, {\n    id: 'Linked Lists',\n    name: 'Linked Lists',\n    rank: 6,\n    dirichletCount: 2,\n    priorCount: 2\n  }, {\n    id: 'Trees',\n    name: 'Trees',\n    rank: 7,\n    dirichletCount: 2,\n    priorCount: 2\n  }]);\n  const [recommendedProblems, setRecommendedProblems] = useState([]);\n  const [completedProblems, setCompletedProblems] = useState([]);\n  const [modalIsOpen, setModalIsOpen] = useState(false);\n  const [currentProblem, setCurrentProblem] = useState(null);\n  const [feedback, setFeedback] = useState(3); // Default feedback is 3, \"average\"\n  const customStyles = {\n    content: {\n      width: '700px',\n      // Set the desired width\n      height: '300px',\n      // Set the desired height\n      margin: 'auto',\n      // Center the modal\n      padding: '20px',\n      // Adjust padding as needed\n      borderRadius: '10px',\n      // Optional: add rounded corners\n      boxShadow: '0 2px 10px rgba(0,0,0,0.1)',\n      // Optional: add a box shadow\n      fontFamily: 'Source Sans Pro, sans-serif',\n      // Set the font family\n      fontSize: '1.2em',\n      // Set the font size\n      color: '#636466' // Set the default font color\n    }\n  };\n\n  // Function: handleRankChange\n  // when user moves topics around, reflect change and change rank number\n  const handleRankChange = newTopics => {\n    setTopics(newTopics.map((topic, index) => ({\n      ...topic,\n      rank: index + 1\n    })));\n  };\n\n  // Function: handleSubmit\n  // for when user submits topic preference rankings\n  const handleSubmit = () => {\n    // for each topic, use the prior and add the inverse-rank value to it. \n    //i.e., dirichlet count gets *reset* each time rankings are\n    // submitted, rather than cumulative observations (see feedback section for accumulating counts for dirichlet)\n    const updatedTopics = topics.map(topic => ({\n      ...topic,\n      dirichletCount: topic.priorCount + (8 - topic.rank) // prior + preference (8 - rank, because #1 is highest preference, etc.)\n    }));\n    setTopics(updatedTopics); // make changes to the topics array\n    console.log(\"Updated Dirichlet counts after ranking submission:\", updatedTopics.map(t => ({\n      name: t.name,\n      dirichletCount: t.dirichletCount\n    })));\n\n    // make top 3 problems rec based on these updated counts\n    fetchProblems(updatedTopics);\n    alert('Rankings submitted!');\n  };\n\n  // Function: reccommendNewProblems\n  // seperate function for the \"Recommend New Problems\" button. \n  // Now, updated counts from user feedback are used.\n  const recommendNewProblems = () => {\n    fetchProblems(topics);\n  };\n\n  // Function: fetchProblems\n  // given the current dirichlet counts, use MAP to select the top 3 topics,\n  // and then select one random problem from the top 3 MAP topics\n  const fetchProblems = updatedTopics => {\n    const m = updatedTopics.length;\n    // calculates all DirichletCounts across topics, including imaginary and new trials\n    // essentially two summations in multinomial MAP equation\n    const totalDirichletCounts = updatedTopics.reduce((acc, cur) => acc + cur.dirichletCount, 0);\n\n    // call MAP, and create a new array to sort topics by MAP without altering the original state\n    const topicsWithCalculatedMAP = updatedTopics.map(topic => ({\n      ...topic,\n      MAP: MAP(topic.dirichletCount, totalDirichletCounts, m)\n    }));\n    // sort by calculated MAPs, take top 3 topics\n    const sortedTopics = topicsWithCalculatedMAP.sort((a, b) => b.MAP - a.MAP).slice(0, 3);\n    // Log MAP values\n    console.log(\"MAP values for all topics:\", topicsWithCalculatedMAP.map(t => ({\n      name: t.name,\n      MAP: t.MAP\n    })));\n\n    // Select one random problem from each of the top three topics\n    let selectedProblems = sortedTopics.map(topic => {\n      // get just valid top 3 topic problems, and don't repeat completed problems\n      const topicProblems = problems.filter(problem => problem.topic === topic.name && !completedProblems.includes(problem.name));\n      return topicProblems[Math.floor(Math.random() * topicProblems.length)];\n    }).filter(problem => problem); // Ensure undefined values are removed in case of empty filters\n\n    setRecommendedProblems(selectedProblems); // update UI for recommended problems\n    console.log(\"Top 3 Recommended Problems based on MAP:\", selectedProblems);\n  };\n\n  // Function: MAP\n  // implements MAP equation. dirichletCount has imaginary and new counts.\n  // totalDirichletCounts has the two summations of all counts, real and imaginary.\n  // m is the total number of topics, which we subtract\n  const MAP = (dirichletCount, totalDirichletCounts, m) => {\n    return (dirichletCount - 1) / (totalDirichletCounts - m);\n  };\n\n  // Function: markAsCompleted\n  // handles when user marks a problem as complete.\n  // add problem to set of completed problems to avoid repeat recommendations\n  const markAsCompleted = (problemName, topicId) => {\n    if (!completedProblems.includes(problemName)) {\n      setCompletedProblems([...completedProblems, problemName]);\n    }\n    setCurrentProblem({\n      problemName,\n      topicId\n    });\n    setModalIsOpen(true);\n  };\n\n  // Function: handleFeedbackSubmit\n  // when user *submits* feedback, we take that as an observation. Update dirichlet counts!\n  const handleFeedbackSubmit = () => {\n    console.log(\"Current feedback value:\", feedback); // Log raw feedback input\n    const feedbackRank = parseInt(feedback, 10); // get user feedback 1-5\n    console.log(\"Current problem being updated:\", currentProblem);\n\n    // update topics based on feedback.\n    // here, the feedback (1-5) is added to the current topic. The \"leftover\"/reverse is added to the *other* topics\n    // sort of like an extension (with more gradient options) of the Beta. Either something \"happens\" and we add a success\n    // count, or it doesn't and we add a failure count\n    const updatedTopics = topics.map(topic => ({\n      ...topic,\n      // if topic == problem topic, add feedback value directly. Else, add inverse\n      dirichletCount: topic.id === currentProblem.topicId ? topic.dirichletCount + feedbackRank : topic.dirichletCount + (5 - feedbackRank)\n    }));\n\n    // Log before updating state (debugging)\n    console.log(\"Pre-update Dirichlet counts:\", topics.map(t => ({\n      name: t.name,\n      dirichletCount: t.dirichletCount\n    })));\n\n    // Update topics state\n    setTopics(updatedTopics);\n\n    // Log after updating state\n    console.log(\"Updated Dirichlet counts after feedback:\", updatedTopics.map(t => ({\n      name: t.name,\n      dirichletCount: t.dirichletCount\n    })));\n    setCompletedProblems(prev => [...prev, currentProblem.problemName]);\n    setModalIsOpen(false);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"banner-container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"banner-content\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"CS106B Practice Problem Recommender\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 157,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Welcome! Please rank your preferences on what to study:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 158,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"main-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"leftColumn\",\n        children: [/*#__PURE__*/_jsxDEV(Categories, {\n          topics: topics,\n          onRankChange: handleRankChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 163,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleSubmit,\n          style: {\n            backgroundColor: '#FFFFFF',\n            color: 'black',\n            border: '1px solid #D1D1D1',\n            borderRadius: '5px',\n            padding: '1.5px 8px',\n            fontSize: '14px',\n            boxShadow: '0 2px 4px rgba(0,0,0,0.1)',\n            cursor: 'pointer',\n            outline: 'none',\n            marginTop: '10px'\n          },\n          children: \"Submit Rankings\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 164,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"rightColumn\",\n        children: recommendedProblems.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              display: 'flex',\n              alignItems: 'center'\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                width: '3px',\n                height: '30px',\n                backgroundColor: 'grey',\n                marginRight: '10px'\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 187,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n              style: {\n                color: 'black',\n                display: 'inline-block',\n                fontWeight: '200px',\n                margin: 0\n              },\n              children: \"Recommended Problems\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 188,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 186,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: recommendNewProblems,\n            style: {\n              position: 'absolute',\n              backgroundColor: '#FFFFFF',\n              color: 'black',\n              border: '1px solid #D1D1D1',\n              borderRadius: '5px',\n              padding: '1.5px 8px',\n              fontSize: '14px',\n              boxShadow: '0 2px 4px rgba(0,0,0,0.1)',\n              cursor: 'pointer',\n              outline: 'none',\n              marginTop: '800px',\n              marginLeft: '-270px'\n            },\n            children: \"Recommend New Problems\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 190,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n            children: recommendedProblems.map((problem, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n              children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                children: /*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: [index + 1, \") \", problem.name]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 212,\n                  columnNumber: 22\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 212,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                style: {\n                  color: 'black'\n                },\n                children: [\"Topic: \", problem.topic]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 213,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: /*#__PURE__*/_jsxDEV(\"a\", {\n                  href: problem.link,\n                  target: \"_blank\",\n                  rel: \"noopener noreferrer\",\n                  children: [\"Link to \", problem.name]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 215,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 214,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => markAsCompleted(problem.name, problem.topic),\n                style: {\n                  backgroundColor: '#FFFFFF',\n                  color: 'black',\n                  border: '1px solid #D1D1D1',\n                  borderRadius: '5px',\n                  padding: '1.5px 8px',\n                  fontSize: '16px',\n                  boxShadow: '0 2px 4px rgba(0,0,0,0.1)',\n                  cursor: 'pointer',\n                  outline: 'none'\n                },\n                children: completedProblems.includes(problem.name) ? '✅' : 'Mark as Completed'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 219,\n                columnNumber: 19\n              }, this)]\n            }, index, true, {\n              fileName: _jsxFileName,\n              lineNumber: 211,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 209,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 185,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      isOpen: modalIsOpen,\n      onRequestClose: () => setModalIsOpen(false),\n      contentLabel: \"Feedback Modal\",\n      style: customStyles // Apply the custom styles here\n      ,\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        style: {\n          color: '#8C1515'\n        },\n        children: [\"Good Work on \", currentProblem === null || currentProblem === void 0 ? void 0 : currentProblem.topicId, \"! \\u2705\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 249,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"On a scale of 1-5, how much more practice on \", currentProblem === null || currentProblem === void 0 ? void 0 : currentProblem.topicId, \" would you like?\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 250,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: 'flex',\n          justifyContent: 'center',\n          alignItems: 'center',\n          gap: '10px'\n        },\n        children: [1, 2, 3, 4, 5].map(value => /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            textAlign: 'center',\n            width: '50px'\n          },\n          children: /*#__PURE__*/_jsxDEV(\"label\", {\n            style: {\n              display: 'flex',\n              flexDirection: 'column',\n              alignItems: 'center'\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"radio\",\n              value: value,\n              checked: feedback === value,\n              onChange: () => setFeedback(value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 255,\n              columnNumber: 11\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              children: value\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 261,\n              columnNumber: 11\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 254,\n            columnNumber: 9\n          }, this)\n        }, value, false, {\n          fileName: _jsxFileName,\n          lineNumber: 253,\n          columnNumber: 7\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 251,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: 'flex',\n          justifyContent: 'space-between',\n          marginTop: '10px',\n          width: '300px',\n          margin: '0 auto'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            textAlign: 'center'\n          },\n          children: \"Less\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 267,\n          columnNumber: 5\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            textAlign: 'center'\n          },\n          children: \"More\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 268,\n          columnNumber: 5\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 266,\n        columnNumber: 3\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleFeedbackSubmit,\n        style: {\n          backgroundColor: '#FFFFFF',\n          color: 'black',\n          border: '1px solid #D1D1D1',\n          borderRadius: '5px',\n          padding: '1.5px 8px',\n          fontSize: '16px',\n          boxShadow: '0 2px 4px rgba(0,0,0,0.1)',\n          cursor: 'pointer',\n          outline: 'none',\n          marginTop: '10px'\n        },\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 270,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 243,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 154,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"IWua01YGmuR0fnx/O+lL8DC2WQY=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","problems","Categories","Modal","jsxDEV","_jsxDEV","setAppElement","App","_s","topics","setTopics","id","name","rank","dirichletCount","priorCount","recommendedProblems","setRecommendedProblems","completedProblems","setCompletedProblems","modalIsOpen","setModalIsOpen","currentProblem","setCurrentProblem","feedback","setFeedback","customStyles","content","width","height","margin","padding","borderRadius","boxShadow","fontFamily","fontSize","color","handleRankChange","newTopics","map","topic","index","handleSubmit","updatedTopics","console","log","t","fetchProblems","alert","recommendNewProblems","m","length","totalDirichletCounts","reduce","acc","cur","topicsWithCalculatedMAP","MAP","sortedTopics","sort","a","b","slice","selectedProblems","topicProblems","filter","problem","includes","Math","floor","random","markAsCompleted","problemName","topicId","handleFeedbackSubmit","feedbackRank","parseInt","prev","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onRankChange","onClick","style","backgroundColor","border","cursor","outline","marginTop","display","alignItems","marginRight","fontWeight","position","marginLeft","href","link","target","rel","isOpen","onRequestClose","contentLabel","justifyContent","gap","value","textAlign","flexDirection","type","checked","onChange","_c","$RefreshReg$"],"sources":["/Users/suzannahwistreich/Desktop/Problem Reccomender/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\nimport problems from './problems.json';\nimport Categories from './Categories';\nimport Modal from 'react-modal';\nimport './Banner.css';\n\nModal.setAppElement('#root');\n\nfunction App() {\n  // init 7 CS106B topics, default rank, dirichletCount to update, and priorCount calculated from poll (which does not update during app)\n  const [topics, setTopics] = useState([\n    { id: 'Programming in C++ and Big-O', name: 'Programming in C++ and Big-O', rank: 1, dirichletCount: 1, priorCount: 1 },\n    { id: 'ADTs', name: 'ADTs', rank: 2, dirichletCount: 1, priorCount: 1 },\n    { id: 'Recursion', name: 'Recursion', rank: 3, dirichletCount: 4, priorCount: 4 },\n    { id: 'Backtracking', name: 'Backtracking', rank: 4, dirichletCount: 6, priorCount: 6 },\n    { id: 'Classes', name: 'Classes', rank: 5, dirichletCount: 1, priorCount: 1 },\n    { id: 'Linked Lists', name: 'Linked Lists', rank: 6, dirichletCount: 2, priorCount: 2 },\n    { id: 'Trees', name: 'Trees', rank: 7, dirichletCount: 2, priorCount: 2 }\n  ]);\n  const [recommendedProblems, setRecommendedProblems] = useState([]);\n  const [completedProblems, setCompletedProblems] = useState([]);\n  const [modalIsOpen, setModalIsOpen] = useState(false);\n  const [currentProblem, setCurrentProblem] = useState(null);\n  const [feedback, setFeedback] = useState(3);  // Default feedback is 3, \"average\"\n  const customStyles = {\n    content: {\n      width: '700px',    // Set the desired width\n      height: '300px',   // Set the desired height\n      margin: 'auto',    // Center the modal\n      padding: '20px',   // Adjust padding as needed\n      borderRadius: '10px', // Optional: add rounded corners\n      boxShadow: '0 2px 10px rgba(0,0,0,0.1)', // Optional: add a box shadow\n      fontFamily: 'Source Sans Pro, sans-serif', // Set the font family\n      fontSize: '1.2em',  // Set the font size\n      color: '#636466',   // Set the default font color\n    },\n  };\n  \n  \n  // Function: handleRankChange\n  // when user moves topics around, reflect change and change rank number\n  const handleRankChange = (newTopics) => {\n    setTopics(newTopics.map((topic, index) => ({ ...topic, rank: index + 1 })));\n  };\n\n  // Function: handleSubmit\n  // for when user submits topic preference rankings\n  const handleSubmit = () => {\n    // for each topic, use the prior and add the inverse-rank value to it. \n    //i.e., dirichlet count gets *reset* each time rankings are\n    // submitted, rather than cumulative observations (see feedback section for accumulating counts for dirichlet)\n    const updatedTopics = topics.map(topic => ({\n      ...topic,\n      dirichletCount: topic.priorCount + (8 - topic.rank) // prior + preference (8 - rank, because #1 is highest preference, etc.)\n    }));\n    \n    setTopics(updatedTopics); // make changes to the topics array\n    console.log(\"Updated Dirichlet counts after ranking submission:\", updatedTopics.map(t => ({name: t.name, dirichletCount: t.dirichletCount})));\n    \n    // make top 3 problems rec based on these updated counts\n    fetchProblems(updatedTopics);\n    alert('Rankings submitted!');\n  };\n  \n  // Function: reccommendNewProblems\n  // seperate function for the \"Recommend New Problems\" button. \n  // Now, updated counts from user feedback are used.\n  const recommendNewProblems = () => {\n    fetchProblems(topics);\n  };\n\n  // Function: fetchProblems\n  // given the current dirichlet counts, use MAP to select the top 3 topics,\n  // and then select one random problem from the top 3 MAP topics\n  const fetchProblems = (updatedTopics) => {\n    const m = updatedTopics.length;\n    // calculates all DirichletCounts across topics, including imaginary and new trials\n    // essentially two summations in multinomial MAP equation\n    const totalDirichletCounts = updatedTopics.reduce((acc, cur) => acc + cur.dirichletCount, 0);\n    \n    // call MAP, and create a new array to sort topics by MAP without altering the original state\n    const topicsWithCalculatedMAP = updatedTopics.map(topic => ({\n      ...topic,\n      MAP: MAP(topic.dirichletCount, totalDirichletCounts, m)\n    }));\n    // sort by calculated MAPs, take top 3 topics\n    const sortedTopics = topicsWithCalculatedMAP.sort((a, b) => b.MAP - a.MAP).slice(0, 3);\n    // Log MAP values\n    console.log(\"MAP values for all topics:\", topicsWithCalculatedMAP.map(t => ({name: t.name, MAP: t.MAP})));\n\n    // Select one random problem from each of the top three topics\n    let selectedProblems = sortedTopics.map(topic => {\n       // get just valid top 3 topic problems, and don't repeat completed problems\n      const topicProblems = problems.filter(problem => problem.topic === topic.name && !completedProblems.includes(problem.name));\n      return topicProblems[Math.floor(Math.random() * topicProblems.length)];\n    }).filter(problem => problem); // Ensure undefined values are removed in case of empty filters\n  \n    setRecommendedProblems(selectedProblems); // update UI for recommended problems\n    console.log(\"Top 3 Recommended Problems based on MAP:\", selectedProblems);\n  };\n\n  // Function: MAP\n  // implements MAP equation. dirichletCount has imaginary and new counts.\n  // totalDirichletCounts has the two summations of all counts, real and imaginary.\n  // m is the total number of topics, which we subtract\n  const MAP = (dirichletCount, totalDirichletCounts, m) => {\n    return (dirichletCount - 1) / (totalDirichletCounts - m);\n  };\n  \n  // Function: markAsCompleted\n  // handles when user marks a problem as complete.\n  // add problem to set of completed problems to avoid repeat recommendations\n  const markAsCompleted = (problemName, topicId) => {\n    if (!completedProblems.includes(problemName)) {\n      setCompletedProblems([...completedProblems, problemName]);\n    }\n    setCurrentProblem({ problemName, topicId });\n    setModalIsOpen(true);\n  };  \n  \n  // Function: handleFeedbackSubmit\n  // when user *submits* feedback, we take that as an observation. Update dirichlet counts!\n  const handleFeedbackSubmit = () => {\n    console.log(\"Current feedback value:\", feedback);  // Log raw feedback input\n    const feedbackRank = parseInt(feedback, 10); // get user feedback 1-5\n    console.log(\"Current problem being updated:\", currentProblem);\n  \n    // update topics based on feedback.\n    // here, the feedback (1-5) is added to the current topic. The \"leftover\"/reverse is added to the *other* topics\n    // sort of like an extension (with more gradient options) of the Beta. Either something \"happens\" and we add a success\n    // count, or it doesn't and we add a failure count\n    const updatedTopics = topics.map(topic => ({\n      ...topic,\n      // if topic == problem topic, add feedback value directly. Else, add inverse\n      dirichletCount: topic.id === currentProblem.topicId ? topic.dirichletCount + feedbackRank : topic.dirichletCount + (5 - feedbackRank)\n    }));\n  \n    // Log before updating state (debugging)\n    console.log(\"Pre-update Dirichlet counts:\", topics.map(t => ({name: t.name, dirichletCount: t.dirichletCount})));\n    \n    // Update topics state\n    setTopics(updatedTopics);\n  \n    // Log after updating state\n    console.log(\"Updated Dirichlet counts after feedback:\", updatedTopics.map(t => ({name: t.name, dirichletCount: t.dirichletCount})));\n  \n    setCompletedProblems(prev => [...prev, currentProblem.problemName]);\n    setModalIsOpen(false);\n  };\n  \n  \n\n  return (\n    <div className=\"App\">\n      <div className=\"banner-container\">\n        <div className=\"banner-content\">\n          <h1>CS106B Practice Problem Recommender</h1>\n          <p>Welcome! Please rank your preferences on what to study:</p>\n        </div>\n      </div>\n      <div className=\"main-container\">\n        <div className=\"leftColumn\">\n          <Categories topics={topics} onRankChange={handleRankChange} />\n          <button\n            onClick={handleSubmit}\n            style={{\n              backgroundColor: '#FFFFFF',\n              color: 'black',\n              border: '1px solid #D1D1D1',\n              borderRadius: '5px',\n              padding: '1.5px 8px',\n              fontSize: '14px',\n              boxShadow: '0 2px 4px rgba(0,0,0,0.1)',\n              cursor: 'pointer',\n              outline: 'none',\n              marginTop: '10px',\n            }}\n          >\n            Submit Rankings\n          </button>\n        </div>\n        <div className=\"rightColumn\">\n        {\n        recommendedProblems.length > 0 && (\n          <div>\n          <div style={{ display: 'flex', alignItems: 'center' }}>\n            <div style={{ width: '3px', height: '30px', backgroundColor: 'grey', marginRight: '10px' }}></div>\n            <h2 style={{ color: 'black', display: 'inline-block', fontWeight: '200px', margin: 0 }}>Recommended Problems</h2>\n          </div>\n          <button\n              onClick={recommendNewProblems}\n              style={{\n                position: 'absolute',\n                backgroundColor: '#FFFFFF',\n                color: 'black',\n                border: '1px solid #D1D1D1',\n                borderRadius: '5px',\n                padding: '1.5px 8px',\n                fontSize: '14px',\n                boxShadow: '0 2px 4px rgba(0,0,0,0.1)',\n                cursor: 'pointer',\n                outline: 'none',\n                marginTop: '800px',\n                marginLeft: '-270px'\n              }}\n            >\n              Recommend New Problems\n            </button>\n            <ul>\n              {recommendedProblems.map((problem, index) => (\n                <li key={index}>\n                  <p><strong>{index + 1}) {problem.name}</strong></p>\n                  <p style={{ color: 'black' }}>Topic: {problem.topic}</p>\n                  <p>\n                    <a href={problem.link} target=\"_blank\" rel=\"noopener noreferrer\">\n                      Link to {problem.name}\n                    </a>\n                  </p>\n                  <button\n                    onClick={() => markAsCompleted(problem.name, problem.topic)}\n                    style={{\n                      backgroundColor: '#FFFFFF',\n                      color: 'black',\n                      border: '1px solid #D1D1D1',\n                      borderRadius: '5px',\n                      padding: '1.5px 8px',\n                      fontSize: '16px',\n                      boxShadow: '0 2px 4px rgba(0,0,0,0.1)',\n                      cursor: 'pointer',\n                      outline: 'none',\n                    }}\n                  >\n                    {completedProblems.includes(problem.name) ? '✅' : 'Mark as Completed'}\n                  </button>\n                </li>\n              ))}\n            </ul>\n          </div>\n        )\n      }\n        </div>\n      </div>\n      <Modal\n      isOpen={modalIsOpen}\n      onRequestClose={() => setModalIsOpen(false)}\n      contentLabel=\"Feedback Modal\"\n      style={customStyles}  // Apply the custom styles here\n    >\n      <h2 style={{ color: '#8C1515' }}>Good Work on {currentProblem?.topicId}! ✅</h2>\n      <p>On a scale of 1-5, how much more practice on {currentProblem?.topicId} would you like?</p>\n      <div style={{ display: 'flex', justifyContent: 'center', alignItems: 'center', gap: '10px' }}>\n    {[1, 2, 3, 4, 5].map(value => (\n      <div key={value} style={{ textAlign: 'center', width: '50px' }}>\n        <label style={{ display: 'flex', flexDirection: 'column', alignItems: 'center' }}>\n          <input\n            type=\"radio\"\n            value={value}\n            checked={feedback === value}\n            onChange={() => setFeedback(value)}\n          />\n          <span>{value}</span>\n        </label>\n      </div>\n    ))}\n  </div>\n  <div style={{ display: 'flex', justifyContent: 'space-between', marginTop: '10px', width: '300px', margin: '0 auto' }}>\n    <div style={{ textAlign: 'center' }}>Less</div>\n    <div style={{ textAlign: 'center' }}>More</div>\n  </div>\n      <button onClick={handleFeedbackSubmit}\n      style={{\n        backgroundColor: '#FFFFFF',\n        color: 'black',\n        border: '1px solid #D1D1D1',\n        borderRadius: '5px',\n        padding: '1.5px 8px',\n        fontSize: '16px',\n        boxShadow: '0 2px 4px rgba(0,0,0,0.1)',\n        cursor: 'pointer',\n        outline: 'none',\n        marginTop: '10px'\n      }}\n      >Submit</button>\n    </Modal>\n\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}