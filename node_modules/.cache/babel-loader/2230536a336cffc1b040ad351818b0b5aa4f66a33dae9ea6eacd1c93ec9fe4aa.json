{"ast":null,"code":"var _jsxFileName = \"/Users/suzannahwistreich/Desktop/Problem Reccomender/src/Categories.js\";\nimport React from 'react';\nimport { DragDropContext, Droppable, Draggable } from 'react-beautiful-dnd';\nimport './Categories.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Categories({\n  topics,\n  onRankChange,\n  onSubmit\n}) {\n  const handleOnDragEnd = result => {\n    if (!result.destination) return;\n    const newTopics = Array.from(topics);\n    const [reorderedItem] = newTopics.splice(result.source.index, 1);\n    newTopics.splice(result.destination.index, 0, reorderedItem);\n    onRankChange(newTopics); // This expects the whole array of topics as the new state\n  };\n  const handleRankChange = (id, newRank) => {\n    // Convert newRank to an integer to avoid type issues\n    onRankChange(id, parseInt(newRank, 10)); // This should update the rank of the specific topic\n  };\n  return /*#__PURE__*/_jsxDEV(DragDropContext, {\n    onDragEnd: handleOnDragEnd,\n    children: [/*#__PURE__*/_jsxDEV(Droppable, {\n      droppableId: \"topics\",\n      children: provided => /*#__PURE__*/_jsxDEV(\"div\", {\n        ...provided.droppableProps,\n        ref: provided.innerRef,\n        children: [topics.map((topic, index) => /*#__PURE__*/_jsxDEV(Draggable, {\n          draggableId: topic.id,\n          index: index,\n          children: provided => /*#__PURE__*/_jsxDEV(\"div\", {\n            ref: provided.innerRef,\n            ...provided.draggableProps,\n            ...provided.dragHandleProps,\n            className: \"category\",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              children: topic.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 34,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"number\",\n              value: topic.rank,\n              onChange: e => handleRankChange(topic.id, e.target.value),\n              className: \"rank-input\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 35,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 29,\n            columnNumber: 19\n          }, this)\n        }, topic.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 15\n        }, this)), provided.placeholder]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: onSubmit,\n      children: \"Submit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 5\n  }, this);\n}\n_c = Categories;\nexport default Categories;\nvar _c;\n$RefreshReg$(_c, \"Categories\");","map":{"version":3,"names":["React","DragDropContext","Droppable","Draggable","jsxDEV","_jsxDEV","Categories","topics","onRankChange","onSubmit","handleOnDragEnd","result","destination","newTopics","Array","from","reorderedItem","splice","source","index","handleRankChange","id","newRank","parseInt","onDragEnd","children","droppableId","provided","droppableProps","ref","innerRef","map","topic","draggableId","draggableProps","dragHandleProps","className","name","fileName","_jsxFileName","lineNumber","columnNumber","type","value","rank","onChange","e","target","placeholder","onClick","_c","$RefreshReg$"],"sources":["/Users/suzannahwistreich/Desktop/Problem Reccomender/src/Categories.js"],"sourcesContent":["import React from 'react';\nimport { DragDropContext, Droppable, Draggable } from 'react-beautiful-dnd';\nimport './Categories.css';\n\nfunction Categories({ topics, onRankChange, onSubmit }) {\n  const handleOnDragEnd = (result) => {\n    if (!result.destination) return;\n\n    const newTopics = Array.from(topics);\n    const [reorderedItem] = newTopics.splice(result.source.index, 1);\n    newTopics.splice(result.destination.index, 0, reorderedItem);\n\n    onRankChange(newTopics);  // This expects the whole array of topics as the new state\n  };\n\n  const handleRankChange = (id, newRank) => {\n    // Convert newRank to an integer to avoid type issues\n    onRankChange(id, parseInt(newRank, 10));  // This should update the rank of the specific topic\n  };\n\n  return (\n    <DragDropContext onDragEnd={handleOnDragEnd}>\n      <Droppable droppableId=\"topics\">\n        {(provided) => (\n          <div {...provided.droppableProps} ref={provided.innerRef}>\n            {topics.map((topic, index) => (\n              <Draggable key={topic.id} draggableId={topic.id} index={index}>\n                {(provided) => (\n                  <div\n                    ref={provided.innerRef}\n                    {...provided.draggableProps}\n                    {...provided.dragHandleProps}\n                    className=\"category\">\n                    <h3>{topic.name}</h3>\n                    <input\n                      type=\"number\"\n                      value={topic.rank}\n                      onChange={(e) => handleRankChange(topic.id, e.target.value)}\n                      className=\"rank-input\"\n                    />\n                  </div>\n                )}\n              </Draggable>\n            ))}\n            {provided.placeholder}\n          </div>\n        )}\n      </Droppable>\n      <button onClick={onSubmit}>Submit</button>\n    </DragDropContext>\n  );\n}\n\nexport default Categories;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}