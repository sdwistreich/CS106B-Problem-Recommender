{"ast":null,"code":"var _jsxFileName = \"/Users/suzannahwistreich/Desktop/Problem Reccomender/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport problems from './problems.json';\nimport Categories from './Categories';\nimport Modal from 'react-modal';\nimport './Banner.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nModal.setAppElement('#root');\nfunction App() {\n  _s();\n  const [topics, setTopics] = useState([{\n    id: 'Programming in C++ and Big-O',\n    name: 'Programming in C++ and Big-O',\n    rank: 1,\n    dirichletCount: 1\n  }, {\n    id: 'ADTs',\n    name: 'ADTs',\n    rank: 2,\n    dirichletCount: 1\n  }, {\n    id: 'Recursion',\n    name: 'Recursion',\n    rank: 3,\n    dirichletCount: 4\n  }, {\n    id: 'Backtracking',\n    name: 'Backtracking',\n    rank: 4,\n    dirichletCount: 6\n  }, {\n    id: 'Classes',\n    name: 'Classes',\n    rank: 5,\n    dirichletCount: 1\n  }, {\n    id: 'Linked Lists',\n    name: 'Linked Lists',\n    rank: 6,\n    dirichletCount: 2\n  }, {\n    id: 'Trees',\n    name: 'Trees',\n    rank: 7,\n    dirichletCount: 2\n  }]);\n  const [recommendedProblems, setRecommendedProblems] = useState([]);\n  const [completedProblems, setCompletedProblems] = useState([]);\n  const [modalIsOpen, setModalIsOpen] = useState(false);\n  const [currentProblem, setCurrentProblem] = useState(null);\n  const [feedback, setFeedback] = useState(3); // Default feedback is 3\n\n  const handleRankChange = newTopics => {\n    setTopics(newTopics.map((topic, index) => ({\n      ...topic,\n      rank: index + 1\n    })));\n  };\n  const handleSubmit = () => {\n    const updatedTopics = topics.map(topic => ({\n      ...topic,\n      dirichletCount: topic.dirichletCount + (8 - topic.rank)\n    }));\n    setTopics(updatedTopics);\n    console.log(\"Updated Dirichlet counts after ranking submission:\", updatedTopics.map(t => ({\n      name: t.name,\n      dirichletCount: t.dirichletCount\n    })));\n\n    // Fetch problems based on these updated counts\n    fetchProblems(updatedTopics);\n    alert('Rankings submitted!');\n  };\n  const recommendNewProblems = () => {\n    fetchProblems(topics); // Use existing topics state directly\n  };\n  const fetchProblems = updatedTopics => {\n    const m = updatedTopics.length;\n    const totalDirichletCounts = updatedTopics.reduce((acc, cur) => acc + cur.dirichletCount, 0);\n\n    // Create a new array to sort topics by MAP without altering the original state\n    const topicsWithCalculatedMAP = updatedTopics.map(topic => ({\n      ...topic,\n      MAP: MAP(topic.dirichletCount, totalDirichletCounts, m)\n    }));\n    const sortedTopics = topicsWithCalculatedMAP.sort((a, b) => b.MAP - a.MAP).slice(0, 3);\n\n    // Select one random problem from each of the top three topics\n    let selectedProblems = sortedTopics.map(topic => {\n      const topicProblems = problems.filter(problem => problem.topic === topic.name && !completedProblems.includes(problem.name));\n      return topicProblems[Math.floor(Math.random() * topicProblems.length)];\n    }).filter(problem => problem); // Ensure undefined values are removed in case of empty filters\n\n    setRecommendedProblems(selectedProblems);\n    console.log(\"Top 3 Recommended Problems based on MAP:\", selectedProblems);\n  };\n  const MAP = (dirichletCount, totalDirichletCounts, m) => {\n    return (dirichletCount - 1) / (totalDirichletCounts - m);\n  };\n  const markAsCompleted = (problemName, topicId) => {\n    if (!completedProblems.includes(problemName)) {\n      setCompletedProblems([...completedProblems, problemName]);\n    }\n    setCurrentProblem({\n      problemName,\n      topicId\n    });\n    setModalIsOpen(true);\n  };\n  const handleFeedbackSubmit = () => {\n    console.log(\"Current feedback value:\", feedback); // Log raw feedback input\n    const feedbackRank = parseInt(feedback, 10);\n    console.log(\"Feedback rank parsed as:\", feedbackRank);\n    console.log(\"Current problem being updated:\", currentProblem);\n\n    // Prepare to update topics based on feedback\n    const updatedTopics = topics.map(topic => ({\n      ...topic,\n      dirichletCount: topic.id === currentProblem.topicId ? topic.dirichletCount + feedbackRank : topic.dirichletCount + (5 - feedbackRank)\n    }));\n\n    // Log before updating state\n    console.log(\"Pre-update Dirichlet counts:\", topics.map(t => ({\n      name: t.name,\n      dirichletCount: t.dirichletCount\n    })));\n\n    // Update topics state\n    setTopics(updatedTopics);\n\n    // Log after updating state\n    console.log(\"Updated Dirichlet counts after feedback:\", updatedTopics.map(t => ({\n      name: t.name,\n      dirichletCount: t.dirichletCount\n    })));\n    setCompletedProblems(prev => [...prev, currentProblem.problemName]);\n    setModalIsOpen(false);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"banner-container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"banner-content\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"CS106B Practice Problem Recommender\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Welcome! Please rank your preferences on what to study:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: recommendNewProblems,\n          children: \"Recommend New Problems\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 11\n        }, this), \"...\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"main-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"leftColumn\",\n        children: /*#__PURE__*/_jsxDEV(Categories, {\n          topics: topics,\n          onRankChange: handleRankChange,\n          onSubmit: handleSubmit\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"rightColumn\",\n        children: recommendedProblems.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"Recommended Problems:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 134,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n            children: recommendedProblems.map((problem, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n              children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                children: /*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: [index + 1, \") \", problem.name]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 138,\n                  columnNumber: 24\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 138,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: [\"Topic: \", problem.topic]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 139,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: /*#__PURE__*/_jsxDEV(\"a\", {\n                  href: problem.link,\n                  target: \"_blank\",\n                  rel: \"noopener noreferrer\",\n                  children: [\"Link to \", problem.name]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 141,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 140,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => markAsCompleted(problem.name, problem.topic),\n                style: {\n                  backgroundColor: '#FFFFFF',\n                  // White background\n                  color: 'black',\n                  // Black text\n                  border: '1px solid #D1D1D1',\n                  // Light gray border\n                  borderRadius: '5px',\n                  // Rounded corners\n                  padding: '1.5px 8px',\n                  // Padding inside the button\n                  fontSize: '16px',\n                  // Text size\n                  boxShadow: '0 2px 4px rgba(0,0,0,0.1)',\n                  // Subtle shadow\n                  cursor: 'pointer',\n                  // Pointer cursor on hover\n                  outline: 'none' // Remove the outline on focus for cleaner look\n                },\n                children: completedProblems.includes(problem.name) ? 'âœ…' : 'Mark as Completed'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 145,\n                columnNumber: 21\n              }, this)]\n            }, index, true, {\n              fileName: _jsxFileName,\n              lineNumber: 137,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 135,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      isOpen: modalIsOpen,\n      onRequestClose: () => setModalIsOpen(false),\n      contentLabel: \"Feedback Modal\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: [\"Good Work on \", currentProblem === null || currentProblem === void 0 ? void 0 : currentProblem.topicId, \"!\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"On a scale of 1-5, how much more practice on \", currentProblem === null || currentProblem === void 0 ? void 0 : currentProblem.topic, \" would you like?\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [1, 2, 3, 4, 5].map(value => /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"radio\",\n            value: value,\n            checked: feedback === value,\n            onChange: () => setFeedback(value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 180,\n            columnNumber: 15\n          }, this), value]\n        }, value, true, {\n          fileName: _jsxFileName,\n          lineNumber: 179,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleFeedbackSubmit,\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 190,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 117,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"Gf00JnILB5lBhnCp8Ij+mti+6bw=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","problems","Categories","Modal","jsxDEV","_jsxDEV","setAppElement","App","_s","topics","setTopics","id","name","rank","dirichletCount","recommendedProblems","setRecommendedProblems","completedProblems","setCompletedProblems","modalIsOpen","setModalIsOpen","currentProblem","setCurrentProblem","feedback","setFeedback","handleRankChange","newTopics","map","topic","index","handleSubmit","updatedTopics","console","log","t","fetchProblems","alert","recommendNewProblems","m","length","totalDirichletCounts","reduce","acc","cur","topicsWithCalculatedMAP","MAP","sortedTopics","sort","a","b","slice","selectedProblems","topicProblems","filter","problem","includes","Math","floor","random","markAsCompleted","problemName","topicId","handleFeedbackSubmit","feedbackRank","parseInt","prev","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","onRankChange","onSubmit","href","link","target","rel","style","backgroundColor","color","border","borderRadius","padding","fontSize","boxShadow","cursor","outline","isOpen","onRequestClose","contentLabel","value","type","checked","onChange","_c","$RefreshReg$"],"sources":["/Users/suzannahwistreich/Desktop/Problem Reccomender/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\nimport problems from './problems.json';\nimport Categories from './Categories';\nimport Modal from 'react-modal';\nimport './Banner.css';\n\nModal.setAppElement('#root');\n\nfunction App() {\n  const [topics, setTopics] = useState([\n    { id: 'Programming in C++ and Big-O', name: 'Programming in C++ and Big-O', rank: 1, dirichletCount: 1 },\n    { id: 'ADTs', name: 'ADTs', rank: 2, dirichletCount: 1 },\n    { id: 'Recursion', name: 'Recursion', rank: 3, dirichletCount: 4 },\n    { id: 'Backtracking', name: 'Backtracking', rank: 4, dirichletCount: 6 },\n    { id: 'Classes', name: 'Classes', rank: 5, dirichletCount: 1 },\n    { id: 'Linked Lists', name: 'Linked Lists', rank: 6, dirichletCount: 2 },\n    { id: 'Trees', name: 'Trees', rank: 7, dirichletCount: 2 }\n  ]);\n  const [recommendedProblems, setRecommendedProblems] = useState([]);\n  const [completedProblems, setCompletedProblems] = useState([]);\n  const [modalIsOpen, setModalIsOpen] = useState(false);\n  const [currentProblem, setCurrentProblem] = useState(null);\n  const [feedback, setFeedback] = useState(3);  // Default feedback is 3\n\n  const handleRankChange = (newTopics) => {\n    setTopics(newTopics.map((topic, index) => ({ ...topic, rank: index + 1 })));\n  };\n\n  const handleSubmit = () => {\n    const updatedTopics = topics.map(topic => ({\n      ...topic,\n      dirichletCount: topic.dirichletCount + (8 - topic.rank)\n    }));\n    \n    setTopics(updatedTopics);\n    console.log(\"Updated Dirichlet counts after ranking submission:\", updatedTopics.map(t => ({name: t.name, dirichletCount: t.dirichletCount})));\n    \n    // Fetch problems based on these updated counts\n    fetchProblems(updatedTopics);\n    alert('Rankings submitted!');\n  };\n  \n  \n  const recommendNewProblems = () => {\n    fetchProblems(topics);  // Use existing topics state directly\n  };\n\n  const fetchProblems = (updatedTopics) => {\n    const m = updatedTopics.length;\n    const totalDirichletCounts = updatedTopics.reduce((acc, cur) => acc + cur.dirichletCount, 0);\n    \n    // Create a new array to sort topics by MAP without altering the original state\n    const topicsWithCalculatedMAP = updatedTopics.map(topic => ({\n      ...topic,\n      MAP: MAP(topic.dirichletCount, totalDirichletCounts, m)\n    }));\n\n    const sortedTopics = topicsWithCalculatedMAP.sort((a, b) => b.MAP - a.MAP).slice(0, 3);\n  \n    // Select one random problem from each of the top three topics\n    let selectedProblems = sortedTopics.map(topic => {\n      const topicProblems = problems.filter(problem => problem.topic === topic.name && !completedProblems.includes(problem.name));\n      return topicProblems[Math.floor(Math.random() * topicProblems.length)];\n    }).filter(problem => problem); // Ensure undefined values are removed in case of empty filters\n  \n    setRecommendedProblems(selectedProblems);\n    console.log(\"Top 3 Recommended Problems based on MAP:\", selectedProblems);\n  };\n\n\n  const MAP = (dirichletCount, totalDirichletCounts, m) => {\n    return (dirichletCount - 1) / (totalDirichletCounts - m);\n  };\n  \n\n  const markAsCompleted = (problemName, topicId) => {\n    if (!completedProblems.includes(problemName)) {\n      setCompletedProblems([...completedProblems, problemName]);\n    }\n    setCurrentProblem({ problemName, topicId });\n    setModalIsOpen(true);\n  };  \n  \n  \n  const handleFeedbackSubmit = () => {\n    console.log(\"Current feedback value:\", feedback);  // Log raw feedback input\n    const feedbackRank = parseInt(feedback, 10);\n  \n    console.log(\"Feedback rank parsed as:\", feedbackRank);\n    console.log(\"Current problem being updated:\", currentProblem);\n  \n    // Prepare to update topics based on feedback\n    const updatedTopics = topics.map(topic => ({\n      ...topic,\n      dirichletCount: topic.id === currentProblem.topicId ? topic.dirichletCount + feedbackRank : topic.dirichletCount + (5 - feedbackRank)\n    }));\n  \n    // Log before updating state\n    console.log(\"Pre-update Dirichlet counts:\", topics.map(t => ({name: t.name, dirichletCount: t.dirichletCount})));\n    \n    // Update topics state\n    setTopics(updatedTopics);\n  \n    // Log after updating state\n    console.log(\"Updated Dirichlet counts after feedback:\", updatedTopics.map(t => ({name: t.name, dirichletCount: t.dirichletCount})));\n  \n    setCompletedProblems(prev => [...prev, currentProblem.problemName]);\n    setModalIsOpen(false);\n  };\n  \n  \n\n  \n\n\n  return (\n    <div className=\"App\">\n      <div className=\"banner-container\">\n        <div className=\"banner-content\">\n          <h1>CS106B Practice Problem Recommender</h1>\n          <p>Welcome! Please rank your preferences on what to study:</p>\n          <button onClick={recommendNewProblems}>Recommend New Problems</button>\n        ...\n        </div>\n      </div>\n      <div className=\"main-container\">\n        <div className=\"leftColumn\">\n          <Categories topics={topics} onRankChange={handleRankChange} onSubmit={handleSubmit} />\n        </div>\n        <div className=\"rightColumn\">\n        {\n          recommendedProblems.length > 0 && (\n            <div>\n              <h2>Recommended Problems:</h2>\n              <ul>\n                {recommendedProblems.map((problem, index) => (\n                  <li key={index}>\n                    <p><strong>{index + 1}) {problem.name}</strong></p>\n                    <p>Topic: {problem.topic}</p>\n                    <p>\n                      <a href={problem.link} target=\"_blank\" rel=\"noopener noreferrer\">\n                        Link to {problem.name}\n                      </a>\n                    </p>\n                    <button\n                      onClick={() => markAsCompleted(problem.name, problem.topic)}\n                      style={{\n                        backgroundColor: '#FFFFFF', // White background\n                        color: 'black', // Black text\n                        border: '1px solid #D1D1D1', // Light gray border\n                        borderRadius: '5px', // Rounded corners\n                        padding: '1.5px 8px', // Padding inside the button\n                        fontSize: '16px', // Text size\n                        boxShadow: '0 2px 4px rgba(0,0,0,0.1)', // Subtle shadow\n                        cursor: 'pointer', // Pointer cursor on hover\n                        outline: 'none', // Remove the outline on focus for cleaner look\n                      }}\n                    >\n                      {completedProblems.includes(problem.name) ? 'âœ…' : 'Mark as Completed'}\n                    </button>\n                  </li>\n                ))}\n              </ul>\n            </div>\n          )\n        }\n\n        </div>\n      </div>\n      <Modal\n        isOpen={modalIsOpen}\n        onRequestClose={() => setModalIsOpen(false)}\n        contentLabel=\"Feedback Modal\"\n      >\n        <h2>Good Work on {currentProblem?.topicId}!</h2>\n        <p>On a scale of 1-5, how much more practice on {currentProblem?.topic} would you like?</p>\n        <div>\n          {[1, 2, 3, 4, 5].map(value => (\n            <label key={value}>\n              <input\n                type=\"radio\"\n                value={value}\n                checked={feedback === value}\n                onChange={() => setFeedback(value)}\n              />\n              {value}\n            </label>\n          ))}\n        </div>\n        <button onClick={handleFeedbackSubmit}>Submit</button>\n      </Modal>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}